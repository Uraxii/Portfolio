{
"imports":{
	"getopt":{"type":"import","value":"getopt","severity":"1","note":"Provides C style runtime arguments to Python. This is probably super strange to see in a setup.py file. Might be larger issues upon review."},
	"socket":{"type":"import","value":"socket","severity":"4","note":"Connects client and host. Allows data to be sent over the network."},
	"subprocess":{"type":"import","value":"subprocess","severity":"4","note":"Executes commands on a host."},
	"sys":{"type":"import","value":"sys","severity":"2","note":"Is used to talk to the operating system to parse arguments and read from the buffer."},
	"threading":{"type":"import","value":"threading","severity":"4","note":"Starts a separate thread to run processes."},
	"os":{"type":"import","value":"os","severity":"1","note":"Used to determine the target operating system."},
	"struct":{"type":"import","value":"struct","severity":"3","note":"Used to determine where specific information is located within the header of a packet."},
	"time":{"type":"import","value":"time","severity":"0","note":"Used to pause the script for a defined time, normally in seconds."},
	"scapy.all":{"type":"import","value":"scapy.all","severity":"4","note":"Use to build a sniffer and provides an interface for sniffing mail packets and dissecting their contents."},
	"scapy":{"type":"import","value":"scapy","severity":"4","note":"Use to build a sniffer and provides an interface for sniffing packets and dissecting their contents. Also used to ARP Poisoning."},
	"signal":{"type":"import","value":"signal","severity":"1","note":"Operating system responses used to pass to other threads or programs."},
	"re":{"type":"import","value":"re","severity":"2","note":"specifies a set of strings that matches it; the functions in this module let you check if a particular string matches a given regular expression."},
	"zlib":{"type":"import","value":"zlib","severity":"3","note":"Used to compress or decompress data."},
	"cv2":{"type":"import","value":"cv2","severity":"2","note":"Writes file to directory."},
	"pyhook":{"type":"import","value":"pyhook","severity":"4","note":"Captures keystrokes and mouse clicks, time of event, window it happened in, the value of it, and any keyboard modifiers."},
	"win32clipboard":{"type":"import","value":"win32clipboard","severity":"4","note":"Module that interacts with the win32 clipboard"},
	"pythoncom":{"type":"import","value":"pythoncom","severity":"2","note":"A module, encapsulating the OLE automation API, usually used for scripting."},
	"win32ui":{"type":"import","value":"win32ui","severity":"1","note":"A module, encapsulating the Microsoft Foundation Classes."},
	"win32con":{"type":"import","value":"win32con","severity":"1","note":"This module contains constants related to Win32 programming"},
	"win32gui":{"type":"import","value":"win32gui","severity":"1","note":"Python extensions for Microsoft Windows’ Provides access to much of the Win32 API, the ability to create and use COM objects, and the Pythonwin environment"},
	"win32api":{"type":"import","value":"win32api","severity":"1","note":"A module, encapsulating the Windows Win32 API."},
	"random":{"type":"import","value":"random","severity":"1","note":"This module implements pseudo-random number generators for various distributions."},
	"ctypes":{"type":"import","value":"ctypes","severity":"2","note":"A foreign function library for Python. It provides C compatible data types, and allows calling functions in DLLs or shared libraries. It can be used to wrap these libraries in pure Python."},
	"urllib2":{"type":"import","value":"urllib2","severity":"1","note":"The urllib2 module defines functions and classes which help in opening URLs (mostly HTTP) in a complex world — basic and digest authentication, redirections, cookies and more."},
	"base64":{"type":"import","value":"base64","severity":"2","note":"This module provides functions for encoding binary data to printable ASCII characters and decoding such encodings back to binary data. It provides encoding and decoding functions for the encodings specified in RFC 3548, which defines the Base16, Base32, and Base64 algorithms, and for the de-facto standard Ascii85 and Base85 encodings."},
	"Queue":{"type":"import","value":"Queue","severity":"4","note":"Used to store remote files to analyze"},
	"urllib":{"type":"import","value":"urllib","severity":"4","note":"Encodes URL to check if specific file is accessible"},
	"queue":{"type":"import","value":"queue","severity":"3","note":"Used to store remote files to analyze"},
	"cookielib":{"type":"import","value":"cookielib","severity":"4","note":"Handles Joomla cookie"},
	"HTMLParser":{"type":"import","value":"HTMLParser","severity":"4","note":"Parses retrieved HTML"},
	"volatility.conf":{"type":"import","value":"volatility.conf","severity":"4","note":"Creates a volatility conf object. Allows for options like parse."},
	"volatility.registry":{"type":"import","value":"volatility.registry","severity":"4","note":"Parse registry data"},
	"volatility.commands":{"type":"import","value":"volatility.commands","severity":"4","note":"Allows commands to be issued through volatility"},
	"volatility.addrspace":{"type":"import","value":"volatility.addrspace","severity":"4","note":"Tell volatility what address space to find data"},
	"volatility.plugins.taskmods":{"type":"import","value":"volatility.plugins.taskmods","severity":"4","note":"Lists all running processes"}
},
"method_calls":{
	"os.name":{"type":"method_call","value":"os.name","severity":"1","note":"Used to determine the target operating system."},
	"socket.IPPROTO_IP ":{"type":"method_call","value":"socket.IPPROTO_IP ","severity":"2","note":"Used to identify packets using the IP protocol to sniff"},
	"socket.IPPROTO_ICMP":{"type":"method_call","value":"socket.IPPROTO_ICMP","severity":"2","note":"Used to identify packets using the ICMP protocol to sniff"},
	"socket.socket":{"type":"method_call","value":"socket.socket","severity":"2","note":"Creates a raw socket that will be used to bind to a public interface"},
	"sniffer.bind":{"type":"method_call","value":"sniffer.bind","severity":"2","note":"Binds the raw socket to a public interface"},
	"sniffer.setsockopt":{"type":"method_call","value":"sniffer.setsockopt","severity":"2","note":"Used to include IP headers in the packet capture"},
	"sniffer.ioctl":{"type":"method_call","value":"sniffer.ioctl","severity":"4","note":"Used to setup promiscuous mode allowing you to sniff all packets that the network"},
	"sniffer.recvfrom":{"type":"method_call","value":"sniffer.recvfrom","severity":"3","note":"Read in one sniffed packet"},
	"self.protocol_map ":{"type":"method_call","value":"self.protocol_map ","severity":"1","note":"Maps protocol constants to their names"},
	"self.src_address ":{"type":"method_call","value":"self.src_address ","severity":"2","note":"Creates a readable ip address from the source"},
	"self.dst_address ":{"type":"method_call","value":"self.dst_address ","severity":"2","note":"Creates a readable ip address from the destination"},
	"socket.inet_ntoa":{"type":"method_call","value":"socket.inet_ntoa","severity":"2","note":"Call used to format a readable ip address"},
	"self.protocol_map":{"type":"method_call","value":"self.protocol_map","severity":"2","note":"Identifies protocol used in a readable format"},
	"socket.IPPROTO_IP":{"type":"method_call","value":"socket.IPPROTO_IP","severity":"2","note":"Used to identify packets using the IP protocol to sniff"},
	"Socket.socket":{"type":"method_call","value":"Socket.socket","severity":"2","note":"Creates a raw socket that will be used to bind to a public interface"},
	"time.sleep":{"type":"method_call","value":"time.sleep","severity":"0","note":"Tell the program to sleep"},
	"icmp_header.code":{"type":"method_call","value":"icmp_header.code","severity":"2","note":"Checks the type of ICMP header code to see if its a three"},
	"icmp_header.type":{"type":"method_call","value":"icmp_header.type","severity":"2","note":"If the ICMP header code is 3 it sets the type to 3"},
	"packet.show":{"type":"method_call","value":"packet.show","severity":"3","note":"Used to display contents of the captured packet"},
	"mail_packet.lower":{"type":"method_call","value":"mail_packet.lower","severity":"4","note":"If an authentication string is detected this function prints out the server its being sent to inn actual data bytes of the packet"},
	"get_mac":{"type":"method_call","value":"get_mac","severity":"2","note":"Used to resolve gateway IP"},
	"threading.Thread":{"type":"method_call","value":"threading.Thread","severity":"3","note":"Starts sniffing network traffic"},
	"sniff":{"type":"method_call","value":"sniff","severity":"3","note":"Used to capture a preset amount of packets using a BPF filter for the target host"},
	"wrpcap":{"type":"method_call","value":"wrpcap","severity":"3","note":"Writes captured data to a PCAP file"},
	"restore_target":{"type":"method_call","value":"restore_target","severity":"4","note":"Restores network to original state prior to ARP poisoning"},
	"send":{"type":"method_call","value":"send","severity":"2","note":"Used to reset the ARP caches of the gateway and target machines"},
	"os.kill":{"type":"method_call","value":"os.kill","severity":"1","note":"Used to exit process"},
	"srp":{"type":"method_call","value":"srp","severity":"2","note":"Used to emit an ARP request to the specified IP address in order to resolve the MAC address associated with it"},
	"poison_target:":{"type":"method_call","value":"poison_target:","severity":"3","note":"Used to build ARP requests for poisoning both the target IP and the gateway"},
	"http_assembler":{"type":"method_call","value":"http_assembler","severity":"1","note":"Tell the program to sleep for 5 seconds"},
	"rdpcap":{"type":"method_call","value":"rdpcap","severity":"2","note":"Tell the program to sleep for 5 seconds"},
	"str":{"type":"method_call","value":"str","severity":"2","note":"Tell the program to sleep for 5 seconds"},
	"get_http_headers":{"type":"method_call","value":"get_http_headers","severity":"2","note":"Tell the program to sleep for 5 seconds"},
	"extract_image":{"type":"method_call","value":"extract_image","severity":"2","note":"Tell the program to sleep for 5 seconds"},
	"open":{"type":"method_call","value":"open","severity":"3","note":"Opens a file"},
	"face_detect":{"type":"method_call","value":"face_detect","severity":"3","note":"Tell the program to sleep for 5 seconds"},
	"cv2.rectangle":{"type":"method_call","value":"cv2.rectangle","severity":"4","note":"Tell the program to sleep for 5 seconds"},
	"cv2.imwrite":{"type":"method_call","value":"cv2.imwrite","severity":"2","note":"Tell the program to sleep for 5 seconds"},
	"os.chdir":{"type":"method_call","value":"os.chdir","severity":"1","note":"Changes working directory path"},
	"Queue.Queue":{"type":"method_call","value":"Queue.Queue","severity":"1","note":"Multi-consumer queue, useful in threaded programming."},
	"os.walk":{"type":"method_call","value":"os.walk","severity":"1","note":"Generate file names in a directory tree"},
	"remote_path.startswith":{"type":"method_call","value":"remote_path.startswith","severity":"1","note":"?"},
	"os.path.splitext":{"type":"method_call","value":"os.path.splitext","severity":"1","note":"Splits pathname path into a pair (root, ext) such that root_ext == path"},
	"web_paths.put":{"type":"method_call","value":"web_paths.put","severity":"1","note":"Grabs a web path?"},
	"web_paths.empty":{"type":"method_call","value":"web_paths.empty","severity":"1","note":"Checks if the web path is valid?"},
	"web_paths.get":{"type":"method_call","value":"web_paths.get","severity":"1","note":"Grabs a web path?"},
	"urllib2.Request":{"type":"method_call","value":"urllib2.Request","severity":"1","note":"Requests a url"},
	"urllib2.urlopen":{"type":"method_call","value":"urllib2.urlopen","severity":"1","note":"Opens the requested url"},
	"response.read":{"type":"method_call","value":"response.read","severity":"1","note":"Reads the response object"},
	"response.code":{"type":"method_call","value":"response.code","severity":"1","note":"Responds with the web code (200=OK, 404=not found)"},
	"response.close":{"type":"method_call","value":"response.close","severity":"1","note":"Closes the web response"},
	"urllib2.HTTPError":{"type":"method_call","value":"urllib2.HTTPError","severity":"1","note":"Response error 500"},
	"range":{"type":"method_call","value":"range","severity":"1","note":"Ranges in a thread?"},
	"t.start":{"type":"method_call","value":"t.start","severity":"1","note":"Starts a thread objects activity"},
	"fd.readlines":{"type":"method_call","value":"fd.readlines","severity":"1","note":"Returns a list containing each line in the file as a list item"},
	"fd.close":{"type":"method_call","value":"fd.close","severity":"1","note":"Closes the given file descriptor"},
	"word.rstrip":{"type":"method_call","value":"word.rstrip","severity":"1","note":"Returns a copy of the string with trailing characters removed"},
	"word_queue.empty":{"type":"method_call","value":"word_queue.empty","severity":"1","note":"Empties the queue of the given word"},
	"attempt_list.append":{"type":"method_call","value":"attempt_list.append","severity":"1","note":"Adds items to a list"},
	"KeyStroke":{"type":"method_call","value":"KeyStroke","severity":"3","note":"Prints out the event of a keystroke event or clipboard."},
	"win32gui.GetDesktopWindow":{"type":"method_call","value":"win32gui.GetDesktopWindow","severity":"2","note":"Acquires a handle to the entire desktop, which includes the entire viewable are across multiple monitors"},
	"win32api.GetSystemMetrics":{"type":"method_call","value":"win32api.GetSystemMetrics","severity":"1","note":"Determines size and dimensions required for the screenshot"},
	"win32gui.GetWindowDC":{"type":"method_call","value":"win32gui.GetWindowDC","severity":"2","note":"Creates a device context."},
	"win32iu.CreateBitmap":{"type":"method_call","value":"win32iu.CreateBitmap","severity":"2","note":"Creates a bitmap object"},
	"screenshot.SaveBitmapFile":{"type":"method_call","value":"screenshot.SaveBitmapFile","severity":"1","note":"Save the bitmap to a file"},
	"ctypes.create_string_buffer":{"type":"method_call","value":"ctypes.create_string_buffer","severity":"3","note":"Create a buffer in memory"},
	"ctypes.cast":{"type":"method_call","value":"ctypes.cast","severity":"3","note":"Creates a function pointer to our shellcode"},
	"shellcode_func":{"type":"method_call","value":"shellcode_func","severity":"3","note":"Call our shellcode"},
	"get_last_input":{"type":"method_call","value":"get_last_input","severity":"2","note":"Holds a timestamp of when the last input event was detected on the system"},
	"kernel32.GetTickCount":{"type":"method_call","value":"kernel32.GetTickCount","severity":"2","note":"Determines how long the machine has been on for"},
	"get_key_press":{"type":"method_call","value":"get_key_press","severity":"3","note":"Determines the number of mouse-clicks, time of mouse-clicks, as well as how many keystrokes the target has issued."},
	"get_current_process":{"type":"method_call","value":"get_current_process","severity":"1","note":"Gets a handle to the foreground Window, gets the process ID, Gets the executable name, prints it out."},
	"os.listdir":{"type":"method_call","value":"os.listdir","severity":"4","note":"can retrieve enviroment variables like user profile names and domain name and computer name and processor spec and Architecture and PATH and Location of windows Dir and program dir and the OS and  System root and TMP locations "},
	"os.environ":{"type":"method_call","value":"os.environ","severity":"4","note":"can retrieve enviroment variables like user profile names and domain name and computer name and processor spec and Architecture and PATH and Location of windows Dir and program dir and the OS and  System root and TMP locations "},
	"json.loads":{"type":"method_call","value":"json.loads","severity":"4","note":"it can get_trojan_config function is responsible for retrieving the remote configuration document from the repo so that your trojan knows which modules to run with "},
	"base64.b64decode ":{"type":"method_call","value":"base64.b64decode ","severity":"4","note":"is used in retrieving the trojan's remote configuration document"},
	"base64.b64encode":{"type":"method_call","value":"base64.b64encode","severity":"4","note":"is used in retrieving the trojan's remote configuration document"},
	"exec":{"type":"method_call","value":"exec","severity":"4","note":"can be used to use pythons import machinery to gain access to code in trojan modules from remote configuration "},
	"sys.modules":{"type":"method_call","value":"sys.modules","severity":"4","note":" can insert our newly created Trojan module into the sys.modules list also can add our custom module importer with "},
	"sys.meta_path":{"type":"method_call","value":"sys.meta_path","severity":"4","note":" can insert our newly created Trojan module into the sys.modules list also can add our custom module importer with "},
	"imp.new_module":{"type":"method_call","value":"imp.new_module","severity":"4","note":"a native imp module to first create a new blank module object, return a new empty module object called name. This object is not inserted in sys.modules. "},
	"importlib.util.module_from_spec":{"type":"method_call","value":"importlib.util.module_from_spec","severity":"4","note":"a native imp module to first create a new blank module object, return a new empty module object called name. This object is not inserted in sys.modules. "},
	"run":{"type":"method_call","value":"run","severity":"4","note":"can kick off the Trojan malicous module in its own thread "},
	"start":{"type":"method_call","value":"start","severity":"4","note":"can kick off the Trojan malicous module in its own thread "},
	"login":{"type":"method_call","value":"login","severity":"4","note":"can simply authenticate the bot to the remote Trojan repository "},
	"repo.blob":{"type":"method_call","value":"repo.blob","severity":"4","note":" retrieve the current repo and branch objects for use by other functions but usernames and password may have access controls and be obfuscated and  can also grab files from the remote repo and then reading the contents in locally and also blob functionality "},
	"add":{"type":"method_call","value":"add","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"commit":{"type":"method_call","value":"commit","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"remote":{"type":"method_call","value":"remote","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"push":{"type":"method_call","value":"push","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"git":{"type":"method_call","value":"git","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"repo.branch":{"type":"method_call","value":"repo.branch","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"repository":{"type":"method_call","value":"repository","severity":"4","note":"connect the bot to the remote Trojan repository "},
	"put":{"type":"method_call","value":"put","severity":"2","note":"queue stuff"},
	"get":{"type":"method_call","value":"get","severity":"2","note":"queue stuff"},
	"empty":{"type":"method_call","value":"empty","severity":"2","note":"queue stuff"}
},
"constants":{

}
}